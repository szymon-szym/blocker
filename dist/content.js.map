{"version":3,"sources":["content.js"],"names":["console","log","fullBlockList","clearWP","forEach","sel","document","querySelectorAll","x","img","createElement","src","parentElement","replaceWith","initialReplacementsFlags","initialReplacements","isFullBlocked","window","location","toString","includes","allIframes","length","width","height","googleAds","otherAds","otherAdsCase","googleAdsDiv","tvnAdsDiv","iframesIdsToReplace","iframesSrcToReplace","observer","MutationObserver","mutations","mutation","addedNodes","i","node","nodeName","remove","id","type","startReplacing","observe","body","childList","subtree","attributes","characterData","stopReplacing","disconnect","chrome","runtime","onMessage","addListener","request","sender","sendResponse","message","storage","local","get","result","currState","undefined","catblocker"],"mappings":"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","file":"content.js","sourceRoot":"../src","sourcesContent":["// to be moved to separated module\n\nconsole.log(`[content] start content script`);\n\nconst fullBlockList = [\"onet.pl\", \"wp.pl\", \"o2.pl\"];\n\n// ***** to be moved to the helper module\nconst clearWP = () => {\n  const selectorsToReplace = [\n    \"#app-content > div > div > div > div > div > a > div > div > img\",\n    \"#app-content > div > div > div > div > div > a > div > div > div > img\",\n    \"#app-content > div > div > div > div > div > a > div > div > div > div > img\",\n    \"#app-content > div > div > div > div > div > a > div > div > div > div > div > img\",\n    \"#app-content > div > div > div > div > div > div > a > div > div > img\",\n    \"#glonews > div > div > div > div > div > div > a > div > div > div > div > div > img\",\n    \"#glonews > div > div > div > div > div > div > a > div > div > div > div > img\",\n    \"#glonews > div > div > div > div > div > div > a > div > div > div > img\",\n    \"#glonews > div > div > div > div > div > div > a > div > div > img\",\n  ];\n\n  selectorsToReplace.forEach((sel) => {\n    let adImg = document.querySelectorAll(sel);\n    // console.log(`selector: ${sel}`)\n\n    adImg.forEach((x) => {\n      console.log(`replacing divs on wp`);\n      const img = document.createElement(\"img\");\n      img.src = `https://placekitten.com/g/600/200`;\n      x.parentElement.replaceWith(img);\n    });\n  });\n};\n\n// *****\nlet initialReplacementsFlags = true;\n\nconst initialReplacements = () => {\n  // iframes are being added dynamically,\n  // so it does not make sense to replace them on document load\n\n  // in general we can't hijack all iframes, because it would block pages functionalities\n  // but on some pages there are no usefull functionalities, so we can use all iframes there\n\n  // iframes flow\n  let isFullBlocked = false;\n  fullBlockList.forEach((x) => {\n    if (window.location.toString().includes(x)) {\n      console.log(`full block mode`);\n      isFullBlocked = true;\n    }\n  });\n\n  if (isFullBlocked) {\n    const allIframes = document.querySelectorAll(\"iframe\");\n    console.log(`blocking all found iframes at start ${allIframes.length}`);\n    allIframes.forEach((x) => {\n      const img = document.createElement(\"img\");\n      img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n        \"300\"}`;\n      x.replaceWith(img);\n    });\n  } else {\n    const googleAds = document.querySelectorAll(\"iframe[id*='google_ads']\");\n    console.log(`[content]adds in iframes found ${googleAds.length}`);\n    googleAds.forEach((x) => {\n      console.log(\"replacing\");\n      const img = document.createElement(\"img\");\n      img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n        \"300\"}`;\n      x.replaceWith(img);\n    });\n    const otherAds = document.querySelectorAll(\"iframe[src*='ads']\");\n    console.log(`other adds found ${otherAds.length}`);\n    otherAds.forEach((x) => {\n      console.log(\"replacing\");\n      const img = document.createElement(\"img\");\n      img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n        \"300\"}`;\n      x.replaceWith(img);\n    });\n    const otherAdsCase = document.querySelectorAll(\"iframe[src*='Ads']\");\n    console.log(`other adds found ${otherAdsCase.length}`);\n    otherAdsCase.forEach((x) => {\n      console.log(\"replacing\");\n      const img = document.createElement(\"img\");\n      img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n        \"300\"}`;\n      x.replaceWith(img);\n    });\n  }\n\n  // divs flow\n  // todo - merge all selectors\n  const googleAdsDiv = document.querySelectorAll(\"div[id*='google_ads']\");\n  console.log(`adds in divs found ${googleAdsDiv.length}`);\n  googleAdsDiv.forEach((x) => {\n    console.log(\"replacing\");\n    const img = document.createElement(\"img\");\n    img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n      \"300\"}`;\n    x.replaceWith(img);\n  });\n  const tvnAdsDiv = document.querySelectorAll(\"div[class*='tvn-adv']\");\n  console.log(`tvn adds in divs found ${tvnAdsDiv.length}`);\n  tvnAdsDiv.forEach((x) => {\n    console.log(\"replacing\");\n    const img = document.createElement(\"img\");\n    img.src = `https://placekitten.com/g/${x.width || \"500\"}/${x.height ||\n      \"300\"}`;\n    x.replaceWith(img);\n  });\n};\n\n/// ***** OBSERVER *****\n// for observer\nconst iframesIdsToReplace = [\"google_ads_\"];\nconst iframesSrcToReplace = [\"ads\", \"Ads\", \"ad\", \"adv\"];\n\nlet isFullBlocked = false;\nfullBlockList.forEach((x) => {\n  if (window.location.toString().includes(x)) {\n    console.log(`full block mode`);\n    isFullBlocked = true;\n  }\n});\n\nconst observer = new MutationObserver(function(mutations) {\n  mutations.forEach(function(mutation) {\n    if (mutation.addedNodes) {\n      if (window.location.toString().includes(\"wp.pl\")) {\n        clearWP();\n      }\n      for (let i = 0; i < mutation.addedNodes.length; i++) {\n        const node = mutation.addedNodes[i];\n\n        if (node.nodeName === \"IFRAME\") {\n          // check full blocked option\n          if (isFullBlocked) {\n            console.log(\"blocking all iframes\");\n            if (node.height == 0) {\n              console.log(`removing 0 px height iframes`);\n              node.remove();\n            }\n            const img = document.createElement(\"img\");\n            img.src = `https://placekitten.com/g/${node.width ||\n              \"500\"}/${node.height || \"300\"}`;\n            node.replaceWith(img);\n            return;\n          }\n          // regular flow\n          iframesIdsToReplace.forEach((x) => {\n            if (node.id.includes(x)) {\n              console.log(`iframe to replace by id ${node.id}`);\n              const img = document.createElement(\"img\");\n              img.src = `https://placekitten.com/g/${node.width ||\n                \"500\"}/${node.height || \"300\"}`;\n              node.replaceWith(img);\n              return;\n            }\n          });\n          iframesSrcToReplace.forEach((x) => {\n            if (node.src.includes(x)) {\n              console.log(`iframe to replace by src ${node.src}`);\n              const img = document.createElement(\"img\");\n              img.src = `https://placekitten.com/g/${node.width ||\n                \"500\"}/${node.height || \"300\"}`;\n              node.replaceWith(img);\n              return;\n            }\n          });\n\n          // refresh tvn blocker\n          const tvnAdsDiv = document.querySelectorAll(\"div[class*='tvn-adv']\");\n          console.log(`tvn adds in divs found ${tvnAdsDiv.length}`);\n          tvnAdsDiv.forEach((x) => {\n            console.log(\"replacing\");\n            const img = document.createElement(\"img\");\n            img.src = `https://placekitten.com/g/${x.width ||\n              \"500\"}/${x.height || \"300\"}`;\n            x.replaceWith(img);\n          });\n        }\n      }\n    } else {\n      console.log(`mutation: ${mutation.type}`);\n    }\n  });\n});\n\n// naive state implementation\n// turn on blocking\n// turn off blocking\n\nconst startReplacing = () => {\n  // turn on observer\n\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n    attributes: false,\n    characterData: false,\n  });\n  // turn on initial load replacements\n  initialReplacementsFlags = true;\n};\n\nconst stopReplacing = () => {\n  // turn off observer\n  observer.disconnect();\n  // turn off initial load replacements\n  initialReplacementsFlags = false;\n};\n\n// handle messages from popup\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n  switch (request.message) {\n    case \"stop\":\n      console.log(`[content] stop`);\n      stopReplacing();\n      break;\n    case \"good\":\n      console.log(`[content] good`);\n      startReplacing();\n      initialReplacements();\n      break;\n    case \"money\":\n      console.log(`[content] money`);\n      startReplacing();\n      initialReplacements();\n      break;\n    default:\n      console.log(`[content] not button msg`);\n  }\n});\n\n// initialize: read state from store and then decide if block\nchrome.storage.local.get([\"catblocker\"], function(result) {\n  let currState = result.catblocker === undefined ? true : result.catblocker;\n  console.log(`[content] at init current state is ${currState}`);\n  if (currState) {\n    console.log(`[content] blocking adds on start`);\n    initialReplacements();\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: false,\n      characterData: false,\n    });\n  } else {\n    console.log(`[content] blocking adds on start STOPPED`);\n  }\n});\n"]}