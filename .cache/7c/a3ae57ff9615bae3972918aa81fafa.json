{"id":"background.js","dependencies":[{"name":"/home/szymon/projekty/adblocker2/package.json","includedInParent":true,"mtime":1587486870566}],"generated":{"js":"// background may be used to block all requests. For now plugin uses only content scripts\n// let currState;\n// const blockURLcb = function(details) {\n// //   console.log(\"blocking:\", details.url);\n//   if (!white_list.includes(details.url)) {\n//     console.log(`REDIRECT current url ${details.url} is not on the whitelist`);\n//     // return { redirectUrl: \"https://placekitten.com/200/300\" };\n//     return { cancel: true };\n//   } else {\n//     console.log(`ALLOW current url ${details.url} is on the whitelist do not block`);\n//     return { cancel: false}\n//   }\n// };\n// // todo \n// chrome.storage.local.get([\"blocker\"], function(result) {\n//   currState = result.blocker === undefined ? true : result.blocker;\n//   console.log(`at init current state is ${currState}`);\n//   if (currState) {\n//     console.log(`init adding blocking listener`);\n//     currState = true;\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"bolcker state set in starge to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else {\n//     console.log(`init removing blocking listener`);\n//     currState = false;\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"bolcker state set in starage to false\")\n//     );\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });\n// //  todo -> sync with local storage instead of listening for messages\n// chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n//   if (message.checkbox === \"true\") {\n//     console.log(`adding blocking listener`);\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"message - bolcker state set to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else if (message.checkbox === \"false\") {\n//     console.log(`removing blocking listener`);\n//     console.log(`${message.checkbox} - false`);\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"message bolcker state false\")\n//     );\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"background.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"background.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":0},"source":"background.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"background.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"background.js","original":{"line":7,"column":0}},{"generated":{"line":6,"column":0},"source":"background.js","original":{"line":8,"column":0}},{"generated":{"line":7,"column":0},"source":"background.js","original":{"line":9,"column":0}},{"generated":{"line":8,"column":0},"source":"background.js","original":{"line":10,"column":0}},{"generated":{"line":9,"column":0},"source":"background.js","original":{"line":11,"column":0}},{"generated":{"line":10,"column":0},"source":"background.js","original":{"line":12,"column":0}},{"generated":{"line":11,"column":0},"source":"background.js","original":{"line":13,"column":0}},{"generated":{"line":12,"column":0},"source":"background.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"background.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":0},"source":"background.js","original":{"line":17,"column":0}},{"generated":{"line":15,"column":0},"source":"background.js","original":{"line":18,"column":0}},{"generated":{"line":16,"column":0},"source":"background.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"background.js","original":{"line":20,"column":0}},{"generated":{"line":18,"column":0},"source":"background.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":0},"source":"background.js","original":{"line":22,"column":0}},{"generated":{"line":20,"column":0},"source":"background.js","original":{"line":23,"column":0}},{"generated":{"line":21,"column":0},"source":"background.js","original":{"line":24,"column":0}},{"generated":{"line":22,"column":0},"source":"background.js","original":{"line":25,"column":0}},{"generated":{"line":23,"column":0},"source":"background.js","original":{"line":26,"column":0}},{"generated":{"line":24,"column":0},"source":"background.js","original":{"line":27,"column":0}},{"generated":{"line":25,"column":0},"source":"background.js","original":{"line":28,"column":0}},{"generated":{"line":26,"column":0},"source":"background.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"background.js","original":{"line":30,"column":0}},{"generated":{"line":28,"column":0},"source":"background.js","original":{"line":31,"column":0}},{"generated":{"line":29,"column":0},"source":"background.js","original":{"line":32,"column":0}},{"generated":{"line":30,"column":0},"source":"background.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":0},"source":"background.js","original":{"line":34,"column":0}},{"generated":{"line":32,"column":0},"source":"background.js","original":{"line":35,"column":0}},{"generated":{"line":33,"column":0},"source":"background.js","original":{"line":36,"column":0}},{"generated":{"line":34,"column":0},"source":"background.js","original":{"line":37,"column":0}},{"generated":{"line":35,"column":0},"source":"background.js","original":{"line":38,"column":0}},{"generated":{"line":36,"column":0},"source":"background.js","original":{"line":39,"column":0}},{"generated":{"line":37,"column":0},"source":"background.js","original":{"line":40,"column":0}},{"generated":{"line":38,"column":0},"source":"background.js","original":{"line":42,"column":0}},{"generated":{"line":39,"column":0},"source":"background.js","original":{"line":43,"column":0}},{"generated":{"line":40,"column":0},"source":"background.js","original":{"line":44,"column":0}},{"generated":{"line":41,"column":0},"source":"background.js","original":{"line":45,"column":0}},{"generated":{"line":42,"column":0},"source":"background.js","original":{"line":46,"column":0}},{"generated":{"line":43,"column":0},"source":"background.js","original":{"line":47,"column":0}},{"generated":{"line":44,"column":0},"source":"background.js","original":{"line":48,"column":0}},{"generated":{"line":45,"column":0},"source":"background.js","original":{"line":49,"column":0}},{"generated":{"line":46,"column":0},"source":"background.js","original":{"line":50,"column":0}},{"generated":{"line":47,"column":0},"source":"background.js","original":{"line":51,"column":0}},{"generated":{"line":48,"column":0},"source":"background.js","original":{"line":52,"column":0}},{"generated":{"line":49,"column":0},"source":"background.js","original":{"line":53,"column":0}},{"generated":{"line":50,"column":0},"source":"background.js","original":{"line":54,"column":0}},{"generated":{"line":51,"column":0},"source":"background.js","original":{"line":55,"column":0}},{"generated":{"line":52,"column":0},"source":"background.js","original":{"line":56,"column":0}},{"generated":{"line":53,"column":0},"source":"background.js","original":{"line":57,"column":0}},{"generated":{"line":54,"column":0},"source":"background.js","original":{"line":58,"column":0}},{"generated":{"line":55,"column":0},"source":"background.js","original":{"line":59,"column":0}},{"generated":{"line":56,"column":0},"source":"background.js","original":{"line":61,"column":0}},{"generated":{"line":57,"column":0},"source":"background.js","original":{"line":62,"column":0}},{"generated":{"line":58,"column":0},"source":"background.js","original":{"line":63,"column":0}}],"sources":{"background.js":"// background may be used to block all requests. For now plugin uses only content scripts\n\n// let currState;\n\n// const blockURLcb = function(details) {\n// //   console.log(\"blocking:\", details.url);\n//   if (!white_list.includes(details.url)) {\n//     console.log(`REDIRECT current url ${details.url} is not on the whitelist`);\n//     // return { redirectUrl: \"https://placekitten.com/200/300\" };\n//     return { cancel: true };\n//   } else {\n//     console.log(`ALLOW current url ${details.url} is on the whitelist do not block`);\n//     return { cancel: false}\n//   }\n// };\n\n// // todo \n// chrome.storage.local.get([\"blocker\"], function(result) {\n//   currState = result.blocker === undefined ? true : result.blocker;\n//   console.log(`at init current state is ${currState}`);\n//   if (currState) {\n//     console.log(`init adding blocking listener`);\n//     currState = true;\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"bolcker state set in starge to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else {\n//     console.log(`init removing blocking listener`);\n//     currState = false;\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"bolcker state set in starage to false\")\n//     );\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });\n\n// //  todo -> sync with local storage instead of listening for messages\n// chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n//   if (message.checkbox === \"true\") {\n//     console.log(`adding blocking listener`);\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"message - bolcker state set to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else if (message.checkbox === \"false\") {\n//     console.log(`removing blocking listener`);\n//     console.log(`${message.checkbox} - false`);\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"message bolcker state false\")\n//     );\n\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });\n"},"lineCount":null}},"error":null,"hash":"c5bdbf9755e776f71b7eaa5bc299320b","cacheData":{"env":{}}}