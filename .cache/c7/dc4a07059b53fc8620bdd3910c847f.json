{"id":"bEr1","dependencies":[{"name":"/home/szymon/projekty/adblocker2/package.json","includedInParent":true,"mtime":1587906770293}],"generated":{"js":"console.log(\"[background] script is running\"),chrome.runtime.onMessage.addListener(function(o,e,n){switch(o.message){case\"stop\":console.log(\"[background] stop\");break;case\"good\":console.log(\"[background] good\");break;case\"money\":console.log(\"[background] money\");break;default:console.log(\"[background] not button msg\")}});"},"sourceMaps":{"js":{"mappings":[{"source":"background.js","name":"console","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"background.js","name":"log","original":{"line":1,"column":8},"generated":{"line":1,"column":8}},{"source":"background.js","original":{"line":1,"column":0},"generated":{"line":1,"column":12}},{"source":"background.js","name":"chrome","original":{"line":4,"column":0},"generated":{"line":1,"column":46}},{"source":"background.js","name":"runtime","original":{"line":4,"column":7},"generated":{"line":1,"column":53}},{"source":"background.js","name":"onMessage","original":{"line":4,"column":15},"generated":{"line":1,"column":61}},{"source":"background.js","name":"addListener","original":{"line":4,"column":25},"generated":{"line":1,"column":71}},{"source":"background.js","original":{"line":4,"column":37},"generated":{"line":1,"column":83}},{"source":"background.js","name":"request","original":{"line":4,"column":46},"generated":{"line":1,"column":92}},{"source":"background.js","name":"sender","original":{"line":4,"column":55},"generated":{"line":1,"column":94}},{"source":"background.js","name":"sendResponse","original":{"line":4,"column":63},"generated":{"line":1,"column":96}},{"source":"background.js","name":"request","original":{"line":5,"column":12},"generated":{"line":1,"column":99}},{"source":"background.js","name":"request","original":{"line":5,"column":12},"generated":{"line":1,"column":106}},{"source":"background.js","name":"message","original":{"line":5,"column":20},"generated":{"line":1,"column":108}},{"source":"background.js","original":{"line":6,"column":11},"generated":{"line":1,"column":117}},{"source":"background.js","original":{"line":6,"column":11},"generated":{"line":1,"column":121}},{"source":"background.js","name":"console","original":{"line":7,"column":8},"generated":{"line":1,"column":128}},{"source":"background.js","name":"log","original":{"line":7,"column":16},"generated":{"line":1,"column":136}},{"source":"background.js","original":{"line":7,"column":8},"generated":{"line":1,"column":140}},{"source":"background.js","original":{"line":8,"column":8},"generated":{"line":1,"column":161}},{"source":"background.js","original":{"line":9,"column":11},"generated":{"line":1,"column":167}},{"source":"background.js","original":{"line":9,"column":11},"generated":{"line":1,"column":171}},{"source":"background.js","name":"console","original":{"line":10,"column":8},"generated":{"line":1,"column":178}},{"source":"background.js","name":"log","original":{"line":10,"column":16},"generated":{"line":1,"column":186}},{"source":"background.js","original":{"line":10,"column":8},"generated":{"line":1,"column":190}},{"source":"background.js","original":{"line":11,"column":8},"generated":{"line":1,"column":211}},{"source":"background.js","original":{"line":12,"column":11},"generated":{"line":1,"column":217}},{"source":"background.js","original":{"line":12,"column":11},"generated":{"line":1,"column":221}},{"source":"background.js","name":"console","original":{"line":13,"column":8},"generated":{"line":1,"column":229}},{"source":"background.js","name":"log","original":{"line":13,"column":16},"generated":{"line":1,"column":237}},{"source":"background.js","original":{"line":13,"column":8},"generated":{"line":1,"column":241}},{"source":"background.js","original":{"line":14,"column":8},"generated":{"line":1,"column":263}},{"source":"background.js","original":{"line":15,"column":6},"generated":{"line":1,"column":269}},{"source":"background.js","name":"console","original":{"line":16,"column":8},"generated":{"line":1,"column":277}},{"source":"background.js","name":"log","original":{"line":16,"column":16},"generated":{"line":1,"column":285}},{"source":"background.js","original":{"line":16,"column":8},"generated":{"line":1,"column":289}}],"sources":{"background.js":"console.log(`[background] script is running`);\n\n\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n    switch (request.message) {\n      case \"stop\":\n        console.log(`[background] stop`);\n        break;\n      case \"good\":\n        console.log(`[background] good`);\n        break;\n      case \"money\":\n        console.log(`[background] money`);\n        break;\n      default:\n        console.log(`[background] not button msg`);\n    }\n  });\n\n\n// background may be used to block all requests. For now plugin uses only content scripts\n\n// let currState;\n\n// const blockURLcb = function(details) {\n// //   console.log(\"blocking:\", details.url);\n//   if (!white_list.includes(details.url)) {\n//     console.log(`REDIRECT current url ${details.url} is not on the whitelist`);\n//     // return { redirectUrl: \"https://placekitten.com/200/300\" };\n//     return { cancel: true };\n//   } else {\n//     console.log(`ALLOW current url ${details.url} is on the whitelist do not block`);\n//     return { cancel: false}\n//   }\n// };\n\n// // todo \n// chrome.storage.local.get([\"blocker\"], function(result) {\n//   currState = result.blocker === undefined ? true : result.blocker;\n//   console.log(`at init current state is ${currState}`);\n//   if (currState) {\n//     console.log(`init adding blocking listener`);\n//     currState = true;\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"bolcker state set in starge to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else {\n//     console.log(`init removing blocking listener`);\n//     currState = false;\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"bolcker state set in starage to false\")\n//     );\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });\n\n// //  todo -> sync with local storage instead of listening for messages\n// chrome.runtime.onMessage.addListener(function(message, sender, sendResponse) {\n//   if (message.checkbox === \"true\") {\n//     console.log(`adding blocking listener`);\n//     chrome.storage.local.set({ blocker: true }, () =>\n//       console.log(\"message - bolcker state set to true\")\n//     );\n//     chrome.webRequest.onBeforeRequest.addListener(\n//       blockURLcb,\n//       { urls: blocked_domains },\n//       [\"blocking\"]\n//     );\n//   } else if (message.checkbox === \"false\") {\n//     console.log(`removing blocking listener`);\n//     console.log(`${message.checkbox} - false`);\n//     chrome.storage.local.set({ blocker: false }, () =>\n//       console.log(\"message bolcker state false\")\n//     );\n\n//     chrome.webRequest.onBeforeRequest.removeListener(blockURLcb);\n//   }\n// });\n"},"lineCount":null}},"error":null,"hash":"107aa13b47c57a185a37aecb795d60d6","cacheData":{"env":{}}}